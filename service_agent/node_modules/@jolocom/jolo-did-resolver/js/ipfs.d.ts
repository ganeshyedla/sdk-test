/**
 * @class
 * Class abstracting all interactions with ipfs nodes
 * @internal
 */
export declare class IpfsStorageAgent {
    private readonly _endpoint;
    fetchImplementation: any;
    /**
     * Creates an instance of {@link IpfsStorageAgent}
     * @param host - Remote ipfs gateway url
     * @example `const ipfsAgent = new IpfsStorageAgent('https://test.com:443')`
     */
    constructor(host: string);
    /**
     * Dereferences an IPFS hash and parses the result as json
     * @param hash - IPFS hash
     * @example `console.log(await ipfsAgent.catJSON('QmZC...')) // {test: 'test'}`
     */
    catJSON(hash: string): Promise<object>;
    /**
     * Helper method to get data using correct fetch implementation
     * @param endpoint - HTTP endpoint to get data from
     */
    private getRequest;
}
/**
 * Returns a configured instance of the Jolocom ipfs agent
 * @return - Instantiated IPFS agent
 */
export declare const jolocomIpfsStorageAgent: IpfsStorageAgent;

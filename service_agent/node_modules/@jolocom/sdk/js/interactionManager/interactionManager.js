"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.InteractionManager = void 0;
const interaction_1 = require("./interaction");
/**
 * The {@link InteractionManager} is an entry point to dealing with {@link
 * Interaction}s. It also manages {@link InteractionTransport}s by extending
 * {@link Transportable}.  It is meant to be instantiated in context of a {@link
 * JolocomSDK} instance.
 *
 * Interactions are not serialized or fetched from storage, only the
 * interaction tokens ({@link JSONWebToken}). Currently the `InteractionManager`
 * holds a map of all interactions in memory, keyed by ID (which is just the
 * nonce of the first {@link JSONWebToken}).
 *
 *
 * @category Interactions
 */
class InteractionManager {
    constructor(ctx) {
        this.interactions = {};
        this.ctx = ctx;
    }
    async start(token, transportAPI) {
        const interaction = new interaction_1.Interaction(this, token.nonce, token.interactionType, transportAPI);
        this.interactions[token.nonce] = interaction;
        await interaction.processInteractionToken(token);
        return interaction;
    }
    async getInteraction(id, transportAPI) {
        return this.interactions[id]
            ? this.interactions[id]
            : await interaction_1.Interaction.fromMessages(await this.ctx.storage.get.interactionTokens({ nonce: id }), this, id, transportAPI);
    }
}
exports.InteractionManager = InteractionManager;
//# sourceMappingURL=interactionManager.js.map
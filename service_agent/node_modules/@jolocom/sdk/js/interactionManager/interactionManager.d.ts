import { JSONWebToken } from 'jolocom-lib/js/interactionTokens/JSONWebToken';
import { Interaction } from './interaction';
import { Agent } from '../agent';
import { Flow } from './flow';
import { TransportAPI } from '../types';
/**
 * The {@link InteractionManager} is an entry point to dealing with {@link
 * Interaction}s. It also manages {@link InteractionTransport}s by extending
 * {@link Transportable}.  It is meant to be instantiated in context of a {@link
 * JolocomSDK} instance.
 *
 * Interactions are not serialized or fetched from storage, only the
 * interaction tokens ({@link JSONWebToken}). Currently the `InteractionManager`
 * holds a map of all interactions in memory, keyed by ID (which is just the
 * nonce of the first {@link JSONWebToken}).
 *
 *
 * @category Interactions
 */
export declare class InteractionManager {
    readonly ctx: Agent;
    interactions: {
        [NONCE: string]: Interaction<Flow<any>>;
    };
    constructor(ctx: Agent);
    start<F extends Flow<any>>(token: JSONWebToken<any>, transportAPI?: TransportAPI): Promise<Interaction<F>>;
    getInteraction<F extends Flow<any>>(id: string, transportAPI?: TransportAPI): Promise<Interaction<Flow<any>>>;
}
